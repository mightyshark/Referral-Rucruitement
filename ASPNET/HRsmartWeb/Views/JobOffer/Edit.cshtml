@model HRsmartWeb.Models.JobOfferViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MyTemplate.cshtml";

}

<div class="item">
    <img src="@Url.Content("~/Content/MyTemplate/images/")banner4.png" alt="slider" title="slider" class="img-responsive" />

    <div class="slide-detail">
        <div class="container">
            <div class="slider-caption">
                <div class="off"></div>

                <div class="col-md-4 col-sm-4 col-xs-12 paddright">

                </div>

            </div>
        </div>
    </div>
</div>
<!-- login start here -->
<div id="login">
    <div class="container">
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <!-- login-content start here -->
                <div class="login-content">
                    <h1>Update Interview </h1>
                    <ul class="list-inline">
                        <li>
                            <a href="~/JobOffer/Index">Interview List</a>
                        </li>
                        <li>></li>
                        <li>
                            <a href="~/JobOffer/Edit">Update Interview</a>
                        </li>
                    </ul>
                </div>
                <!-- login-content end here -->
            </div>
        </div>
    </div>
</div>


@*<h2>Edit</h2>*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <!-- login end here -->
    <!-- login-form start here -->
    <div id="login-form">
        <div class="container">
            <div class="row">
                <div class="col-sm-offset-2 col-md-8 col-sm-8  col-xs-12">
                    <div class="form">
                        <div class="border"></div>
                        <div class="border1"></div>
                        <form class="form-horizontal" method="post">
                            <fieldset>
                                <div class="form-horizontal">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-sm-12">
                                            <label>Job Title</label>
                                            @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { placeholder = "Job Title", @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-sm-12">
                                            <label>Reference</label>
                                            @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { placeholder = "Reference", @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Mission, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-sm-12">
                                            <label>Mission</label>
                                            @Html.EditorFor(model => model.Mission, new { htmlAttributes = new { placeholder = "Mission", @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Mission, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.DemanderProfile, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-sm-12">
                                            <label>Profil Demandé</label>
                                            @Html.EditorFor(model => model.DemanderProfile, new { htmlAttributes = new { placeholder = "Profil Demandé", @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.DemanderProfile, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-sm-12">
                                            <label>Location</label>
                                            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { placeholder = "Location", @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            <label>Expiration Date</label>
                                            @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { placeholder = "dd/mm/yyyy", @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })


                                        </div>
                                    </div>

                                    <div class="button">
                                        <div class="col-sm-offset-1">
                                            <input type="submit" value="Update" class="btn btn-primary btnus" />

                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
    <

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
            $(function () {
                $(".date-picker").datepicker({
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-100:+0", // You can set the year range as per as your need

                });
            });
        </script>
    }*@
