@model HRsmartWeb.Models.InterviewViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MyTemplate.cshtml";

}


<div class="item">
    <img src="@Url.Content("~/Content/MyTemplate/images/")banner4.png" alt="slider" title="slider" class="img-responsive" />
    <div class="slide-detail">
        <div class="container">
            <div class="slider-caption">
                <div class="off"></div>

                <div class="col-md-4 col-sm-4 col-xs-12 paddright">

                </div>

            </div>
        </div>
    </div>
</div>
<!-- login start here -->
<div id="featured">
    <div class="container">
        <div class="row">
            <!-- featured-jobs start here -->
            <div class="featured-jobs">
                <h1>Update Interview</h1>
                <div class="border"></div>
                <div class="border1"></div>

            </div>
        </div>


        @using (Html.BeginForm("Edit", "Interview", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <!-- login end here -->
    <!-- login-form start here -->
            <div id="login-form">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-offset-2 col-md-8 col-sm-8  col-xs-12">
                            <div class="form">
                                <div class="border"></div>
                                <div class="border1"></div>
                                <form class="form-horizontal" method="post">
                                    <fieldset>
                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <label>Interview Subject</label>
                                                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { placeholder = "Subject", @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })


                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <label>Inerview Description</label>
                                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { placeholder = "Description", @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <label>Start Date</label>
                                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { placeholder = "Start Date", @class = "form-control", id = "StartDate" } })
                                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <label>End Date</label>
                                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { placeholder = "End Date", @class = "form-control", id = "EndDate" } })
                                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <label> HR Interview Results</label>
                                                @Html.EditorFor(model => model.ResultHRInterview, new { htmlAttributes = new { placeholder = "ResultHRInterview", @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ResultHRInterview, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <label>QI Interview Results</label>
                                                @Html.EditorFor(model => model.ResultQIInterview, new { htmlAttributes = new { placeholder = "ResultQIInterview", @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ResultQIInterview, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <label>SoftSkills Interview Results</label>
                                                @Html.EditorFor(model => model.ResultSoftSkillsInterview, new { htmlAttributes = new { placeholder = "ResultSoftSkillsInterview", @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ResultSoftSkillsInterview, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <label>Technical Interview Results</label>
                                                @Html.EditorFor(model => model.ResultTechnicalInterview, new { htmlAttributes = new { placeholder = "ResultTechnicalInterview", @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ResultTechnicalInterview, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <label>Candidate State</label>
                                                @Html.DropDownList("CandidateStates", EnumHelper.GetSelectList(typeof(CandidateState)), "Select CandidateStates", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.CandidateStates, "", new { @class = "text-danger" })
                                                <br />
                                            </div>
                                        </div>




                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <label>FedBack (Optional)</label>
                                                @Html.EditorFor(model => model.FeedBack, new { htmlAttributes = new { placeholder = "FeedBack", @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FeedBack, "", new { @class = "text-danger" })
                                            </div>
                                        </div>




                                        <div class="button">
                                            <div class="col-sm-offset-1">
                                                <input type="submit" value="Edit" class="btn btn-primary btnus" onclick="ValidateStartDate()" />

                                            </div>
                                        </div>
                                    </fieldset>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        }
        <!-- login-form  end here -->
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>


        <script>
            function myFunction() {
                var txt;
                if (confirm("Informations updated with success") == true) {
                    txt = "You pressed OK!";
                } else {
                    txt = "You pressed Cancel!";
                }
                document.getElementById("demo").innerHTML = txt;
            }
        </script>


        @section Scripts
{
            @Scripts.Render("~/bundles/jqueryval")
        }
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript" src="/Scripts/jquery.validate.js"></script>


        <script type="text/javascript">


            function ValidateStartDate() {
                var SDate = document.getElementById('StartDate').value;
                var EDate = document.getElementById('EndDate').value;
                var stDate = new Date(SDate);
                var enDate = new Date(EDate);
                var today = new Date();

                if (stDate != '' && enDate != '' && stDate > enDate) {
                    alert('Error : Start Date is greater than End Date!');
                    document.getElementById('stDateTxt').value = EDate;
                }
                else if (stDate < today || enDate < today) {
                    alert('Error : Select Date is greater than today!');
                    document.getElementById('StartDate').value = '';
                    document.getElementById('StartDate').focus();
                }

            }




        </script>
